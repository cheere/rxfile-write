/*!
 * rxfile-write
 * version: 0.0.4
 * repo: https://github.com/cheere/rxfile-write
 * build: 2021-10-29 14:55:00
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("fs"),require("path")):"function"==typeof define&&define.amd?define(["fs","path"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).fs,e.path)}(this,(function(e,t){"use strict";function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=n(e),i=n(t);const c={error:function(e){if(e)e="unknow";else if("object"==typeof err)return err;return new Error("rxrrw-error=> read.js -> "+err)}},o={exists:function(e){const t=this;return new Promise(((n,i)=>{e?r.default.stat(e,((e,r)=>{e?i(e):r.isDirectory()?n({dir:!0,file:!1}):r.isFile()?n({dir:!1,file:!0}):i(t.error("rxrrw-exist=> stats not dir/file"))})):i(t.error("rxrrw-exist=> path undefined"))}))},existsSync:function(e){const t=this;if(!e)return t.error("rxrrw-existsSync=> path undefined"),{dir:!1,file:!1};const n=r.default.statSync(e);return n.isDirectory()?{dir:!0,file:!1}:n.isFile()?{dir:!1,file:!0}:(t.error("rxrrw-exist=> stats not dir/file"),{dir:!1,file:!1})}},s={};s.read=function(e){const t=this;return new Promise(((n,i)=>{t.exists(e).then((()=>{(function(e){return new Promise(((t,n)=>{r.default.readFile(e,"utf-8",((e,r)=>{e?n(e):t(r)}))}))})(e).then((e=>{n(e)})).catch((e=>{i(e)}))})).catch((e=>{i(e)}))}))};const f={};f.cp=function(e,t){const n=this;return new Promise(((i,c)=>{n.exists(e).then((()=>{(function(e,t){return new Promise(((n,i)=>{r.default.copyFile(e,t,(function(e){e?i(e):n()}))}))})(e,t).then((()=>{i()})).catch((e=>{c(e)}))})).catch((e=>{c(e)}))}))},f.cpSync=function(e,t){return!!this.existsSync(e).file&&function(e,t){try{r.default.copyFileSync(e,t)}catch(e){return!1}return!0}(e,t)};const u={write:function(e,t){return this.writeTo(e,t)},writeSync:function(e,t){h(e,t)},writeAppend:function(e,t){return this.writeTo(e,t,!0)},writeAppendSync:function(e,t){h(e,t,!0)}};u.writeTo=function(e,t,n=!1){return new Promise(((c,o)=>{const s=i.default.dirname(e);this.exists(s).then((()=>{l(e,t,n).then(c).catch(o)})).catch((()=>{(function(e){return new Promise(((t,n)=>{r.default.mkdir(e,{mode:a,flag:"w+"},(function(e){e?n(e):t()}))}))})(e).then((()=>{l(e,t,n).then(c).catch(o)})).catch(o)}))}))};const a=parseInt("0755",8),d=parseInt("0666",8);function l(e,t,n=!1){let i="w+",c=r.default.writeFile;return n&&(c=r.default.appendFile,i="as+"),new Promise(((n,r)=>{c(e,t,{encoding:"utf8",mode:d,flag:i},(function(e){e?r(e):n()}))}))}function h(e,t,n=!1){let i="w+",c=r.default.writeFileSync;n&&(c=r.default.appendFileSync,i="as+");try{c(e,t,{encoding:"utf8",mode:d,flag:i})}catch(e){console.error(e)}}const y={};function w(e){let t=[];r.default.existsSync(e)&&(t=r.default.readdirSync(e),t.forEach((t=>{const n=e+"/"+t;r.default.statSync(n).isDirectory()?w(n):r.default.unlinkSync(n)})),r.default.rmdirSync(e))}y.remove=function(e){const t=this;return new Promise(((n,i)=>{t.exists(e).then((()=>{(function(e){return new Promise(((t,n)=>{try{r.default.statSync(e).isDirectory()?w(e):r.default.unlinkSync(e),t()}catch(e){console.log("rxrrw-remove=> error=",e),n(e)}}))})(e).then((()=>{n()})).catch((e=>{i(e)}))})).catch((e=>{i(e)}))}))};const p=Object.assign(o,s,f,u,y),m=Object.assign(c,p);m.version='"0.0.4"',module.exports=m}));
