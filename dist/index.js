/*!
 * rxfile-write
 * version: 0.0.3
 * repo: https://github.com/cheere/rxfile-write
 * build: 2021-10-25 17:57:55
 */
"use strict";var e=require("fs"),t=require("path");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=r(e),i=r(t);const c={error:function(e){if(e)e="unknow";else if("object"==typeof err)return err;return new Error("rxrrw-error=> read.js -> "+err)}},o={exists:function(e){const t=this;return new Promise(((r,i)=>{e?n.default.stat(e,((e,n)=>{e?i(e):n.isDirectory()?r({dir:!0,file:!1}):n.isFile()?r({dir:!1,file:!0}):i(t.error("rxrrw-exist=> stats not dir/file"))})):i(t.error("rxrrw-exist=> path undefined"))}))}},s={};s.read=function(e){const t=this;return new Promise(((r,i)=>{t.exists(e).then((()=>{(function(e){return new Promise(((t,r)=>{n.default.readFile(e,"utf-8",((e,n)=>{e?r(e):t(n)}))}))})(e).then((e=>{r(e)})).catch((e=>{i(e)}))})).catch((e=>{i(e)}))}))};const u={write:function(e,t){return this.writeTo(e,t)},writeSync:function(e,t){l(e,t)},writeAppend:function(e,t){return this.writeTo(e,t,!0)},writeAppendSync:function(e,t){l(e,t,!0)}};u.writeTo=function(e,t,r=!1){return new Promise(((c,o)=>{const s=i.default.dirname(e);this.exists(s).then((()=>{d(e,t,r).then(c).catch(o)})).catch((()=>{(function(e){return new Promise(((t,r)=>{n.default.mkdir(e,{mode:a,flag:"w+"},(function(e){e?r(e):t()}))}))})(e).then((()=>{d(e,t,r).then(c).catch(o)})).catch(o)}))}))};const a=parseInt("0755",8),f=parseInt("0666",8);function d(e,t,r=!1){let i="w+",c=n.default.writeFile;return r&&(c=n.default.appendFile,i="as+"),new Promise(((r,n)=>{c(e,t,{encoding:"utf8",mode:f,flag:i},(function(e){e?n(e):r()}))}))}function l(e,t,r=!1){let i="w+",c=n.default.writeFileSync;r&&(c=n.default.appendFileSync,i="as+");try{c(e,t,{encoding:"utf8",mode:f,flag:i})}catch(e){console.error(e)}}const h={};function w(e){let t=[];n.default.existsSync(e)&&(t=n.default.readdirSync(e),t.forEach((t=>{const r=e+"/"+t;n.default.statSync(r).isDirectory()?w(r):n.default.unlinkSync(r)})),n.default.rmdirSync(e))}h.remove=function(e){const t=this;return new Promise(((r,i)=>{t.exists(e).then((()=>{(function(e){return new Promise(((t,r)=>{try{n.default.statSync(e).isDirectory()?w(e):n.default.unlinkSync(e),t()}catch(e){console.log("rxrrw-remove=> error=",e),r(e)}}))})(e).then((()=>{r()})).catch((e=>{i(e)}))})).catch((e=>{i(e)}))}))};const y=Object.assign(o,s,u,h),m=Object.assign(c,y);m.version='"0.0.3"',module.exports=m;
